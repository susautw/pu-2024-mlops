# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
import messages_pb2 as messages__pb2
import worker_cluster_training_service_pb2 as worker__cluster__training__service__pb2

GRPC_GENERATED_VERSION = '1.68.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in worker_cluster_training_service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class WorkerClusterTrainingServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetWorkersStatus = channel.unary_unary(
                '/worker_cluster.WorkerClusterTrainingService/GetWorkersStatus',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=worker__cluster__training__service__pb2.GetWorkersStatusResponse.FromString,
                _registered_method=True)
        self.GetWorkerStatus = channel.unary_unary(
                '/worker_cluster.WorkerClusterTrainingService/GetWorkerStatus',
                request_serializer=worker__cluster__training__service__pb2.GetWorkerStatusRequest.SerializeToString,
                response_deserializer=messages__pb2.WorkerStatus.FromString,
                _registered_method=True)
        self.AssignTrainingTask = channel.unary_unary(
                '/worker_cluster.WorkerClusterTrainingService/AssignTrainingTask',
                request_serializer=worker__cluster__training__service__pb2.TaskRequest.SerializeToString,
                response_deserializer=messages__pb2.WorkerStatus.FromString,
                _registered_method=True)
        self.GetTrainingStatus = channel.unary_unary(
                '/worker_cluster.WorkerClusterTrainingService/GetTrainingStatus',
                request_serializer=worker__cluster__training__service__pb2.TaskRequest.SerializeToString,
                response_deserializer=messages__pb2.TrainingStatus.FromString,
                _registered_method=True)
        self.PauseTrainingTask = channel.unary_unary(
                '/worker_cluster.WorkerClusterTrainingService/PauseTrainingTask',
                request_serializer=worker__cluster__training__service__pb2.TaskRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)


class WorkerClusterTrainingServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetWorkersStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetWorkerStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AssignTrainingTask(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTrainingStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PauseTrainingTask(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_WorkerClusterTrainingServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetWorkersStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetWorkersStatus,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=worker__cluster__training__service__pb2.GetWorkersStatusResponse.SerializeToString,
            ),
            'GetWorkerStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetWorkerStatus,
                    request_deserializer=worker__cluster__training__service__pb2.GetWorkerStatusRequest.FromString,
                    response_serializer=messages__pb2.WorkerStatus.SerializeToString,
            ),
            'AssignTrainingTask': grpc.unary_unary_rpc_method_handler(
                    servicer.AssignTrainingTask,
                    request_deserializer=worker__cluster__training__service__pb2.TaskRequest.FromString,
                    response_serializer=messages__pb2.WorkerStatus.SerializeToString,
            ),
            'GetTrainingStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTrainingStatus,
                    request_deserializer=worker__cluster__training__service__pb2.TaskRequest.FromString,
                    response_serializer=messages__pb2.TrainingStatus.SerializeToString,
            ),
            'PauseTrainingTask': grpc.unary_unary_rpc_method_handler(
                    servicer.PauseTrainingTask,
                    request_deserializer=worker__cluster__training__service__pb2.TaskRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'worker_cluster.WorkerClusterTrainingService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('worker_cluster.WorkerClusterTrainingService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class WorkerClusterTrainingService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetWorkersStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/worker_cluster.WorkerClusterTrainingService/GetWorkersStatus',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            worker__cluster__training__service__pb2.GetWorkersStatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetWorkerStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/worker_cluster.WorkerClusterTrainingService/GetWorkerStatus',
            worker__cluster__training__service__pb2.GetWorkerStatusRequest.SerializeToString,
            messages__pb2.WorkerStatus.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AssignTrainingTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/worker_cluster.WorkerClusterTrainingService/AssignTrainingTask',
            worker__cluster__training__service__pb2.TaskRequest.SerializeToString,
            messages__pb2.WorkerStatus.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTrainingStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/worker_cluster.WorkerClusterTrainingService/GetTrainingStatus',
            worker__cluster__training__service__pb2.TaskRequest.SerializeToString,
            messages__pb2.TrainingStatus.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PauseTrainingTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/worker_cluster.WorkerClusterTrainingService/PauseTrainingTask',
            worker__cluster__training__service__pb2.TaskRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class WorkerClusterWorkerServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CheckIn = channel.unary_unary(
                '/worker_cluster.WorkerClusterWorkerService/CheckIn',
                request_serializer=messages__pb2.WorkerData.SerializeToString,
                response_deserializer=worker__cluster__training__service__pb2.CheckInResponse.FromString,
                _registered_method=True)
        self.ReportStatus = channel.unary_unary(
                '/worker_cluster.WorkerClusterWorkerService/ReportStatus',
                request_serializer=worker__cluster__training__service__pb2.ReportStatusRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.ReportTrainingStatus = channel.unary_unary(
                '/worker_cluster.WorkerClusterWorkerService/ReportTrainingStatus',
                request_serializer=worker__cluster__training__service__pb2.ReportTrainingStatusRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)


class WorkerClusterWorkerServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CheckIn(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReportStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReportTrainingStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_WorkerClusterWorkerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CheckIn': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckIn,
                    request_deserializer=messages__pb2.WorkerData.FromString,
                    response_serializer=worker__cluster__training__service__pb2.CheckInResponse.SerializeToString,
            ),
            'ReportStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.ReportStatus,
                    request_deserializer=worker__cluster__training__service__pb2.ReportStatusRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'ReportTrainingStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.ReportTrainingStatus,
                    request_deserializer=worker__cluster__training__service__pb2.ReportTrainingStatusRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'worker_cluster.WorkerClusterWorkerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('worker_cluster.WorkerClusterWorkerService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class WorkerClusterWorkerService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CheckIn(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/worker_cluster.WorkerClusterWorkerService/CheckIn',
            messages__pb2.WorkerData.SerializeToString,
            worker__cluster__training__service__pb2.CheckInResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ReportStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/worker_cluster.WorkerClusterWorkerService/ReportStatus',
            worker__cluster__training__service__pb2.ReportStatusRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ReportTrainingStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/worker_cluster.WorkerClusterWorkerService/ReportTrainingStatus',
            worker__cluster__training__service__pb2.ReportTrainingStatusRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
